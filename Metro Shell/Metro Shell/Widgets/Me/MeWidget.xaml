<UserControl x:Class="Me.MeWidget" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" ClipToBounds="True" DragEnter="UserControlDragEnter" Drop="UserControlDrop" MouseEnter="UserControl_MouseEnter" MouseLeave="UserControl_MouseLeave" MouseLeftButtonDown="UserControl_MouseLeftButtonDown" MouseRightButtonDown="UserControl_MouseRightButtonDown">
    <UserControl.Background>
        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
            <GradientStop Color="#FF0F92D6" Offset="0" />
            <GradientStop Color="#FF3DBAFC" Offset="1" />
        </LinearGradientBrush>
    </UserControl.Background>
    <UserControl.Resources>
        <Style x:Key="{x:Type Button}" BasedOn="{x:Null}" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Black" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="12.5" />
            <Setter Property="Padding" Value="5,4,4,5" />
            <Setter Property="BorderBrush" Value="LightGray" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <!-- We use Grid as a root because it is easy to add more elements to customize the button -->
                        <Grid x:Name="Grid">
                            <Border x:Name="Border" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />

                            <!-- Content Presenter is where the text content etc is placed by the control -->
                            <!-- The bindings are useful so that the control can be parameterized without editing the template -->
                            <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>

                        <!--Each state sets a brush on the Border in the template -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="Border" Value="White" />
                                <Setter Property="BorderBrush" TargetName="Border" Value="Black" />
                                <Setter Property="Foreground" Value="Black" />
                                <Setter Property="FontSize" Value="14" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="true" />
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="BorderBrush" TargetName="Border" Value="Gray" />
                                <Setter Property="Foreground" Value="Gray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="TileAnim">
            <DoubleAnimation Storyboard.TargetName="UserPicTranslate" Storyboard.TargetProperty="Y" AccelerationRatio="0.3" DecelerationRatio="0.7" Duration="0:0:0.4" From="0" To="90" />
            <ThicknessAnimation Storyboard.TargetName="UserName" Storyboard.TargetProperty="Margin" AccelerationRatio="0.3" DecelerationRatio="0.7" Duration="0:0:0.4" From="10,0,10,170" To="10,3,10,80" />
            <DoubleAnimation Storyboard.TargetName="UserPicTranslate" Storyboard.TargetProperty="Y" AccelerationRatio="0.3" BeginTime="0:0:4.5" DecelerationRatio="0.7" Duration="0:0:0.4" To="180" />
            <ThicknessAnimation Storyboard.TargetName="UserName" Storyboard.TargetProperty="Margin" AccelerationRatio="0.3" BeginTime="0:0:4.5" DecelerationRatio="0.7" Duration="0:0:0.4" To="10,0,10,0" />
            <DoubleAnimation Storyboard.TargetName="UserPicTranslate" Storyboard.TargetProperty="Y" AccelerationRatio="0.3" BeginTime="0:0:8.5" DecelerationRatio="0.7" Duration="0:0:0.3" To="0" />
            <ThicknessAnimation Storyboard.TargetName="UserName" Storyboard.TargetProperty="Margin" AccelerationRatio="0.3" BeginTime="0:0:8.5" DecelerationRatio="0.7" Duration="0:0:0.4" To="10,0,10,170" />
        </Storyboard>
    </UserControl.Resources>
    <Grid>
        <TextBlock Margin="10,0,10,170" FontSize="32" Foreground="White" HorizontalAlignment="Left" Name="UserName" Text="User" TextWrapping="Wrap" VerticalAlignment="Bottom" />
        <Image Name="UserPic" Stretch="UniformToFill">
            <Image.RenderTransform>
                <TranslateTransform x:Name="UserPicTranslate" />
            </Image.RenderTransform>
        </Image>
        <Grid x:Name="Options" Height="30" Background="#96000000" VerticalAlignment="Bottom">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RenderTransform>
                <TranslateTransform x:Name="OptionsTranslate" Y="0" />
            </Grid.RenderTransform>
            <Button Grid.Column="0" Background="#96000000" BorderBrush="{x:Null}" BorderThickness="0" Click="Button_Logoff_Click" Content="Logoff" Name="Button_Logoff" />
            <Button Grid.Column="1" Background="#96000000" BorderBrush="{x:Null}" BorderThickness="0" Click="Button_Restart_Click" Content="Restart" Name="Button_Restart" />
            <Button Grid.Column="2" Background="#96000000" BorderBrush="{x:Null}" BorderThickness="0" Click="Button_Shutdown_Click" Content="Shutdown" Name="Button_Shutdown" />
        </Grid>
    </Grid>
</UserControl>